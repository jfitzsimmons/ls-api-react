{"version":3,"sources":["Search.js","Helpers.js","Entity.js","RelationDetails.js","Related.js","App.js","serviceWorker.js","index.js"],"names":["Search","Component","constructor","props","super","handleInput","e","this","setState","query","target","value","handleKeypress","state","updateTerm","charCode","suggestions","id","text","bind","componentDidMount","render","links","suggestion","push","type","key","className","onClick","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","onChange","onKeyPress","placeholder","paginate","direction","prevState","page","Entity","objToQueryString","obj","keyValuePairs","Object","keys","forEach","hasOwnProperty","encodeURIComponent","join","returnError","data","fetchSearchData","componentDidUpdate","prevProps","term","queryString","setId","fetch","method","then","response","json","responseData","length","catch","error","console","log","attributes","name","blurb","summary","cx","cy","r","RelationDetails","PureComponent","included","did","eid","getRelationData","relatedOwnerFlag","rof","relatedOwner","ro","Related","relationships","relationsId","detailsId","localEntityId","active","meta","entityId","getRelationshipData","p","queryPage","myRelations","myDetails","relation","descriptions","desc","description","uniqueId","entity1_id","entity2_id","pageCount","disabled","App","href","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1420994.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import Suggestions from './components/Suggestions';\nimport './App.scss';\n\nexport class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: 'Trump',\n      suggestions: [\n        { id: 'bush', text: 'Bush' },\n        { id: 'boeing', text: 'Boeing' },\n        { id: 'mcconnell', text: 'McConnell' },\n        { id: 'rnc', text: 'RNC' },\n        { id: 'clinton', text: 'Clinton' },\n        { id: 'feinstein', text: 'Feinstein' },\n        { id: 'pfizer', text: 'Pfizer' },\n      ],\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.handleKeypress = this.handleKeypress.bind(this);\n  }\n\n  componentDidMount() {\n    const { query } = this.state;\n    const { updateTerm } = this.props;\n    updateTerm(query);\n  }\n\n  handleInput = (e) => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleKeypress = (e) => {\n    const { query } = this.state;\n    const { updateTerm } = this.props;\n    if (e.charCode === 13) {\n      updateTerm(query);\n    }\n  };\n\n  render() {\n    const { suggestions, query } = this.state;\n    const { updateTerm } = this.props;\n    const links = [];\n    for (const suggestion of suggestions) {\n      links.push(\n        <button type=\"button\" key={suggestion.id} className=\"text\" onClick={() => updateTerm(suggestion.text)}>\n          {suggestion.text}\n        </button>\n      );\n    }\n    return (\n      <div>\n        <div className=\"search\">\n          <div className=\"search__field\">\n            <svg\n              aria-hidden=\"true\"\n              focusable=\"false\"\n              data-prefix=\"fas\"\n              data-icon=\"search\"\n              role=\"img\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 512 512\"\n              className=\"svg-inline--fa fa-search fa-w-16 fa-3x\"\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\n                className=\"\"\n              />\n            </svg>\n            <input onChange={this.handleInput} onKeyPress={this.handleKeypress} placeholder=\"Enter a search term\" />{' '}\n            <button type=\"button\" onClick={() => updateTerm(query)}>\n              Search\n            </button>\n          </div>\n          {/* <Suggestions results={this.state.results} /> */}\n          <div className=\"search__suggestions\">Suggestions: {links}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  updateTerm: PropTypes.func.isRequired,\n};\n","export function paginate(direction) {\n  this.setState((prevState) => ({ page: prevState.page + direction }));\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.scss';\nimport { paginate } from './Helpers.js';\n\nexport class Entity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      returnError: false,\n    };\n    this.data = {};\n    this.paginate = paginate.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchSearchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { term } = this.props;\n    if (term !== prevProps.term) {\n      this.setState(\n        {\n          page: 0,\n        },\n        this.fetchSearchData()\n      );\n    }\n  }\n\n  objToQueryString = (obj) => {\n    const keyValuePairs = [];\n    Object.keys(obj).forEach((key) => {\n      if (obj && obj.hasOwnProperty(key)) {\n        keyValuePairs.push(encodeURIComponent(obj[key]));\n      }\n    });\n    return keyValuePairs.join('&');\n  };\n\n  queryString() {\n    const { term } = this.props;\n    return this.objToQueryString({\n      term,\n    });\n  }\n\n  fetchSearchData() {\n    const { setId } = this.props;\n    fetch(`https://littlesis.org/api/entities/search?q=${this.queryString()}`, {\n      method: 'GET',\n    })\n      .then((response) => response.json())\n      .then((responseData) => {\n        this.data = responseData.data;\n        if (this.data.length === 0) {\n          return this.setState({\n            returnError: true,\n          });\n        }\n        this.setState(\n          {\n            page: 0,\n            returnError: false,\n          },\n          setId(this.data[0].id)\n        );\n      })\n      .catch((error) => {\n        this.setState({\n          returnError: true,\n        });\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { page } = this.state;\n    const { setId } = this.props;\n    if (this.data[page]) {\n      return (\n        <div>\n          <div className=\"entity\">\n            <div>\n              <div className=\"entity__name\">{this.data[page].attributes.name}</div>{' '}\n              <div className=\"entity__blurb\"> {this.data[page].attributes.blurb} </div>\n              <div> {this.data[page].attributes.summary} </div>{' '}\n            </div>{' '}\n            <div className=\"entity__paging page\">\n              {' '}\n              <div>More Results</div>\n              <div>\n                {page + 1} of {this.data.length}\n              </div>\n              <div className=\"entity__paging__buttons page__buttons\">\n                {page === 0 ? null : (\n                  <button\n                    type=\"button\"\n                    className=\"prev entity__paging__button\"\n                    onClick={() => {\n                      this.paginate(-1);\n                      setId(this.data[page - 1].id);\n                    }}\n                  >\n                    <span>{'<<'}&nbsp;</span>\n                    <span className=\"entity__paging__button__text\">{this.data[page - 1].attributes.name}</span>\n                  </button>\n                )}\n                {page === this.data.length - 1 ? null : (\n                  <button\n                    type=\"button\"\n                    className=\"next entity__paging__button\"\n                    onClick={() => {\n                      this.paginate(1);\n                      setId(this.data[page + 1].id);\n                    }}\n                  >\n                    <span className=\"entity__paging__button__text\"> {this.data[page + 1].attributes.name} </span>{' '}\n                    <span>&nbsp;{'>>'} </span>\n                  </button>\n                )}\n              </div>\n            </div>{' '}\n          </div>\n          {}\n        </div>\n      );\n    }\n    const { returnError, term } = this.state;\n    return (\n      <div>\n        <div className=\"render-container\">\n          {' '}\n          {returnError ? (\n            <div className=\"search-error\">\n              ERROR : {term}\n              did not return any results{' '}\n            </div>\n          ) : (\n            <div className=\"painting flx-ctr\">\n              <div>\n                <svg className=\"loading\" viewBox=\"25 25 50 50\">\n                  <circle cx=\"50\" cy=\"50\" r=\"20\">\n                    {' '}\n                  </circle>{' '}\n                </svg>{' '}\n              </div>{' '}\n            </div>\n          )}{' '}\n        </div>{' '}\n      </div>\n    );\n  }\n}\n\nEntity.propTypes = {\n  term: PropTypes.string.isRequired,\n  setId: PropTypes.func.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.scss';\n\nexport class RelationDetails extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      included: {},\n      returnError: false,\n    };\n  }\n\n  componentDidMount() {\n    const { did, eid } = this.props;\n    this.getRelationData(eid, did, true);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { did, eid } = this.props;\n    const relatedOwnerFlag = eid !== prevProps.eid;\n    if (did !== prevProps.did) {\n      this.getRelationData(eid, did, relatedOwnerFlag);\n    }\n  }\n\n  getRelationData(eid, did, rof) {\n    const { relatedOwner } = this.props;\n    fetch(`https://littlesis.org/api/relationships/${did}`, {\n      method: 'GET',\n    })\n      .then((response) => response.json())\n      .then((responseData) => {\n        if (responseData.included.length === 0) {\n          return this.setState({\n            returnError: true,\n          });\n        }\n        this.setState({\n          included: eid === responseData.included[0].id ? responseData.included[1] : responseData.included[0],\n          returnError: false,\n        });\n        const ro =\n          eid === responseData.included[0].id\n            ? responseData.included[0].attributes.name\n            : responseData.included[1].attributes.name;\n        if (rof) relatedOwner(ro);\n      })\n      .catch((error) => {\n        this.setState({\n          returnError: true,\n        });\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { included } = this.state;\n    if (included.attributes) {\n      return (\n        <div className=\"details__window\">\n          <p className=\"details__window__name\">{included.attributes.name}</p>\n          <div className=\"details__window__summary\">\n            <p className=\"darkergray blurb\">{included.attributes.blurb}</p>\n            <p>{included.attributes.summary}</p>\n          </div>\n        </div>\n      );\n    }\n    const { returnError } = this.state;\n    return (\n      <div>\n        <div className=\"render-container\">\n          {' '}\n          {returnError ? (\n            <div className=\"search-error\">\n              ERROR : {included.attributes.name}\n              did not return any results{' '}\n            </div>\n          ) : (\n            <div className=\"painting flx-ctr\">\n              <div>\n                <svg className=\"loading\" viewBox=\"25 25 50 50\">\n                  <circle cx=\"50\" cy=\"50\" r=\"20\">\n                    {' '}\n                  </circle>{' '}\n                </svg>{' '}\n              </div>{' '}\n            </div>\n          )}{' '}\n        </div>{' '}\n      </div>\n    );\n  }\n}\n\nRelationDetails.propTypes = {\n  did: PropTypes.number.isRequired,\n  eid: PropTypes.number.isRequired,\n  relatedOwner: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.scss';\nimport { RelationDetails } from './RelationDetails.js';\nimport { paginate } from './Helpers.js';\n\nexport class Related extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      relationships: {},\n      page: 1,\n      relationsId: 0,\n      detailsId: 0,\n      localEntityId: 0,\n      active: {},\n      relatedOwner: '',\n      returnError: false,\n    };\n    this.meta = {};\n    this.paginate = paginate.bind(this);\n    this.relatedOwner = this.relatedOwner.bind(this);\n  }\n\n  componentDidMount() {\n    const { entityId } = this.props;\n    this.getRelationshipData(entityId);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { entityId } = this.props;\n    const { page, relationsId, localEntityId } = this.state;\n\n    if (entityId !== prevProps.entityId) {\n      this.getRelationshipData(entityId, 1);\n    }\n\n    if (relationsId !== prevState.relationsId) {\n      this.getRelationshipData(relationsId);\n    } else if (page !== prevState.page) {\n      this.getRelationshipData(localEntityId);\n    }\n  }\n\n  getRelationshipData(eid, p) {\n    const { page } = this.state;\n    const queryPage = p ? 1 : page;\n    fetch(`https://littlesis.org/api/entities/${eid}/relationships?page=${queryPage}`, {\n      method: 'GET',\n    })\n      .then((response) => response.json())\n      .then((responseData) => {\n        if (responseData.data.length === 0) {\n          return this.setState({\n            returnError: true,\n          });\n        }\n        this.meta = responseData.meta;\n        this.setState({\n          relationships: responseData.data,\n          detailsId: responseData.data[0].attributes.id,\n          localEntityId: eid,\n          active: responseData.data[0],\n          returnError: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          returnError: true,\n        });\n        console.error(error);\n      });\n  }\n\n  myRelations(relationsId) {\n    this.setState({\n      relationsId,\n      page: 1,\n    });\n  }\n\n  myDetails(relation) {\n    this.setState({\n      detailsId: relation.id,\n      active: relation,\n    });\n  }\n\n  relatedOwner(relatedOwner) {\n    this.setState({\n      relatedOwner,\n    });\n  }\n\n  render() {\n    const { relationships, page, detailsId, localEntityId, active, relatedOwner } = this.state;\n    const activeStyle = 'arrow active';\n    if (relationships[0]) {\n      const descriptions = [];\n      for (const relation of relationships) {\n        const desc = relation.attributes.description;\n        const uniqueId =\n          localEntityId === relation.attributes.entity1_id\n            ? relation.attributes.entity2_id\n            : relation.attributes.entity1_id;\n        descriptions.push(\n          <li key={relation.id} className={active === relation ? activeStyle : 'arrow'}>\n            <div className=\"description\">{desc}</div>\n            <div className=\"buttons\">\n              <button type=\"button\" className=\"button__relationships\" onClick={() => this.myRelations(uniqueId)}>\n                <svg\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"far\"\n                  data-icon=\"address-book\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 448 512\"\n                  className=\"svg-inline--fa fa-address-book fa-w-14 fa-3x\"\n                >\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-68 304H48V48h320v416zM208 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm-89.6 128h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2z\"\n                    className=\"\"\n                  />\n                </svg>\n                {uniqueId}\n              </button>\n              <button className=\"button__details\" type=\"button\" onClick={() => this.myDetails(relation)}>\n                Details {relation.id} <span className={active === relation ? activeStyle : 'arrow'}>{'>'}</span>\n              </button>\n            </div>\n          </li>\n        );\n      }\n      return (\n        <div className=\"flx-ctr wrap related\">\n          <div className=\"relationships flx-hlf\">\n            <div className=\"relationships__results\">\n              <div className=\"relationships__results__title\">\n                <div className=\"title-element\">\n                  <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"far\"\n                    data-icon=\"address-book\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 448 512\"\n                    className=\"svg-inline--fa fa-address-book fa-w-14 fa-3x\"\n                  >\n                    <path\n                      fill=\"currentColor\"\n                      d=\"M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-68 304H48V48h320v416zM208 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm-89.6 128h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6-10.8 0-18.7 8-44.8 8-26.9 0-33.4-8-44.8-8-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2z\"\n                      className=\"\"\n                    />\n                  </svg>\n                  <div className=\"title-element__text\">Relationships of {relatedOwner}</div>\n                </div>\n                <div className=\"hand\">\n                  <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"far\"\n                    data-icon=\"hand-point-down\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 448 512\"\n                    className=\"svg-inline--fa fa-hand-point-down fa-w-14 fa-3x\"\n                  >\n                    <path\n                      fill=\"currentColor\"\n                      d=\"M188.8 512c45.616 0 83.2-37.765 83.2-83.2v-35.647a93.148 93.148 0 0 0 22.064-7.929c22.006 2.507 44.978-3.503 62.791-15.985C409.342 368.1 448 331.841 448 269.299V248c0-60.063-40-98.512-40-127.2v-2.679c4.952-5.747 8-13.536 8-22.12V32c0-17.673-12.894-32-28.8-32H156.8C140.894 0 128 14.327 128 32v64c0 8.584 3.048 16.373 8 22.12v2.679c0 6.964-6.193 14.862-23.668 30.183l-.148.129-.146.131c-9.937 8.856-20.841 18.116-33.253 25.851C48.537 195.798 0 207.486 0 252.8c0 56.928 35.286 92 83.2 92 8.026 0 15.489-.814 22.4-2.176V428.8c0 45.099 38.101 83.2 83.2 83.2zm0-48c-18.7 0-35.2-16.775-35.2-35.2V270.4c-17.325 0-35.2 26.4-70.4 26.4-26.4 0-35.2-20.625-35.2-44 0-8.794 32.712-20.445 56.1-34.926 14.575-9.074 27.225-19.524 39.875-30.799 18.374-16.109 36.633-33.836 39.596-59.075h176.752C364.087 170.79 400 202.509 400 248v21.299c0 40.524-22.197 57.124-61.325 50.601-8.001 14.612-33.979 24.151-53.625 12.925-18.225 19.365-46.381 17.787-61.05 4.95V428.8c0 18.975-16.225 35.2-35.2 35.2zM328 64c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24z\"\n                      className=\"\"\n                    />\n                  </svg>\n                </div>\n              </div>\n              <ul>{descriptions}</ul>\n            </div>\n            <div className=\"page\">\n              <div>\n                Page {page} of {this.meta.pageCount}\n              </div>\n              <div className=\"page__buttons\">\n                <button type=\"button\" className=\"prev\" onClick={() => this.paginate(-1)} disabled={page === 1}>\n                  previous\n                </button>{' '}\n                <button\n                  type=\"button\"\n                  className=\"next\"\n                  onClick={() => this.paginate(1)}\n                  disabled={page === this.meta.pageCount}\n                >\n                  next\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"details flx-hlf\">\n            <RelationDetails did={detailsId} eid={localEntityId} relatedOwner={this.relatedOwner} />\n          </div>\n        </div>\n      );\n    }\n    const { returnError } = this.state;\n    return (\n      <div>\n        <div className=\"render-container\">\n          {' '}\n          {returnError ? (\n            <div className=\"search-error\">\n              ERROR : {localEntityId}\n              did not return any results{' '}\n            </div>\n          ) : (\n            <div className=\"painting flx-ctr\">\n              <div>\n                <svg className=\"loading\" viewBox=\"25 25 50 50\">\n                  <circle cx=\"50\" cy=\"50\" r=\"20\">\n                    {' '}\n                  </circle>{' '}\n                </svg>{' '}\n              </div>{' '}\n            </div>\n          )}{' '}\n        </div>{' '}\n      </div>\n    );\n  }\n}\n\nRelated.propTypes = {\n  entityId: PropTypes.number.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport './App.scss';\nimport { Search } from './Search.js';\nimport { Entity } from './Entity.js';\nimport { Related } from './Related.js';\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: 'Trump',\n      id: 15108,\n    };\n    this.updateTerm = this.updateTerm.bind(this);\n    this.setId = this.setId.bind(this);\n  }\n\n  setId(id) {\n    this.setState({\n      id,\n    });\n  }\n\n  updateTerm(term) {\n    this.setState({\n      term,\n    });\n  }\n\n  render() {\n    const { term, id } = this.state;\n    return (\n      <div id=\"App\" className=\"App\">\n        <div className=\"accent\" />\n        <div className=\"wrap\">\n          <div>\n            <h1>Interlinked profiles of powerful individuals and organizations in the public and private sectors.</h1>\n            <h2>\n              -powered by <a href=\"https://littlesis.org\">LittleSis</a>\n            </h2>\n          </div>\n          <Search updateTerm={this.updateTerm} />\n          <Entity term={term} setId={this.setId} />\n          <Related entityId={id} />{' '}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}